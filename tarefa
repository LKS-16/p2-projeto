
package projeto;

import javax.swing.*;

public class Main {
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            JFrame frame = new JFrame("Gerenciador de Tarefas");
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.setSize(800, 600);
            frame.setLayout(new BorderLayout());

            // Instanciar componentes
            ControleLateral controleLateral = new ControleLateral();
            Tarefa tarefa = new Tarefa();
            PainelControle painelControle = new PainelControle(controleLateral, tarefa);

            // Adicionar componentes ao frame
            frame.add(controleLateral.getScrollPane(), BorderLayout.WEST);
            frame.add(tarefa.getScrollPane(), BorderLayout.CENTER);
            frame.add(painelControle.getPanel(), BorderLayout.EAST);

            frame.setVisible(true);
        });
    }
}

package projeto;
import javax.swing.*;
import javax.swing.tree.*;

public class ControleLateral {
    // Árvore de tarefas e grupos
    private JTree tree;
    private DefaultTreeModel treeModel;
    private DefaultMutableTreeNode rootNode;

    public ControleLateral() {
         // Criar nó raiz da árvore
        rootNode = new DefaultMutableTreeNode("Lista de Tarefas");
        treeModel = new DefaultTreeModel(rootNode);
        
        // Configurar a árvore
        tree = new JTree(treeModel);
        tree.setRootVisible(true);
        tree.setShowsRootHandles(true);
    }

    public JScrollPane getScrollPane() {
        return new JScrollPane(tree);
    }

    public DefaultMutableTreeNode getSelectedNode() {
        return (DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
    }

    public DefaultMutableTreeNode getRootNode() {
        return rootNode;
    }

    // Adicionar uma nova tarefa ao nó selecionado (ou ao raiz, se nenhum for selecionado)
    public void addTask(String taskName) {
        DefaultMutableTreeNode selectedNode = getSelectedNodeOrRoot();
        DefaultMutableTreeNode newTask = new DefaultMutableTreeNode(taskName);
        treeModel.insertNodeInto(newTask, selectedNode, selectedNode.getChildCount());
    }

    // Adicionar um novo grupo
    public void addGroup(String groupName) {
        DefaultMutableTreeNode selectedNode = getSelectedNodeOrRoot();
        DefaultMutableTreeNode newGroup = new DefaultMutableTreeNode(groupName);
        treeModel.insertNodeInto(newGroup, selectedNode, selectedNode.getChildCount());
    }

    // Remover o nó atualmente selecionado, exceto o nó raiz
    public void removeSelected() {
        DefaultMutableTreeNode selectedNode = getSelectedNode();
        if (selectedNode != null && selectedNode != rootNode) {
            treeModel.removeNodeFromParent(selectedNode);
        }
    }

    // Renomear o nó atualmente selecionado
    public void renameSelected(String newName) {
        DefaultMutableTreeNode selectedNode = getSelectedNode();
        if (selectedNode != null && selectedNode != rootNode) {
            selectedNode.setUserObject(newName);
            treeModel.nodeChanged(selectedNode);
        }
    }

    // Alternar entre expandir e colapsar o nó selecionado
    public void toggleCollapse() {
        DefaultMutableTreeNode selectedNode = getSelectedNode();
        if (selectedNode != null) {
            TreePath path = new TreePath(selectedNode.getPath());
            if (tree.isExpanded(path)) {
                tree.collapsePath(path);
            } else {
                tree.expandPath(path);
            }
        }
    }

    private DefaultMutableTreeNode getSelectedNodeOrRoot() {
        DefaultMutableTreeNode selectedNode = getSelectedNode();
        return selectedNode != null ? selectedNode : rootNode;
    }
}


package projeto;
import javax.swing.*;
import java.awt.*;

public class Tarefa {
    private JTextArea taskDetailsArea; // Campo para editar os detalhes da tarefa
    private JScrollPane scrollPane;

    public Tarefa() {
        // Configuração da área de texto para os detalhes da tarefa
        taskDetailsArea = new JTextArea();
        taskDetailsArea.setLineWrap(true);
        taskDetailsArea.setWrapStyleWord(true);

        // Adicionar barra de rolagem à área de texto
        scrollPane = new JScrollPane(taskDetailsArea);
        scrollPane.setPreferredSize(new Dimension(600, 600));
    }

    public JScrollPane getScrollPane() {
        return scrollPane;
    }

    // Define os detalhes da tarefa
    public void setTaskDetails(String details) {
        taskDetailsArea.setText(details);
    }

    // Obtém os detalhes da tarefa
    public String getTaskDetails() {
        return taskDetailsArea.getText();
    }
}

package projeto;

import javax.swing.*;
import java.awt.*;

public class PainelControle {
    private JPanel panel; // Painel com os botões de controle
    private ControleLateral controleLateral;
    private Tarefa tarefa;

    public PainelControle(ControleLateral controleLateral, Tarefa tarefa) {
        this.controleLateral = controleLateral;
        this.tarefa = tarefa;

        // Configuração do painel de botões
        panel = new JPanel();
        
        // Layout em grade de 6 linhas e 1 coluna
        panel.setLayout(new GridLayout(6, 1));

        // Botões de controle
        JButton addTaskButton = new JButton("Adicionar Tarefa");
        JButton addGroupButton = new JButton("Adicionar Grupo");
        JButton removeButton = new JButton("Remover Selecionado");
        JButton renameButton = new JButton("Renomear Selecionado");
        JButton collapseButton = new JButton("Colapsar/Expandir Grupo");

        // Configuração das ações dos botões
        addTaskButton.addActionListener(e -> addTask());
        addGroupButton.addActionListener(e -> addGroup());
        removeButton.addActionListener(e -> removeSelected());
        renameButton.addActionListener(e -> renameSelected());
        collapseButton.addActionListener(e -> toggleCollapse());

        // Adicionar botões ao painel
        panel.add(addTaskButton);
        panel.add(addGroupButton);
        panel.add(removeButton);
        panel.add(renameButton);
        panel.add(collapseButton);
    }

    public JPanel getPanel() {
        return panel; // Retorna o painel com os botões
    }

    // Adicionar uma nova tarefa
    private void addTask() {
        String taskName = JOptionPane.showInputDialog("Nome da nova tarefa:");
        if (taskName != null && !taskName.trim().isEmpty()) {
            controleLateral.addTask(taskName);
        }
    }

    // Adicionar um novo grupo
    private void addGroup() {
        String groupName = JOptionPane.showInputDialog("Nome do novo grupo:");
        if (groupName != null && !groupName.trim().isEmpty()) {
            controleLateral.addGroup(groupName);
        }
    }
    
    // Remover a tarefa ou grupo selecionado
    private void removeSelected() {
        controleLateral.removeSelected();
    }

    // Renomear a tarefa ou grupo selecionado
    private void renameSelected() {
        String newName = JOptionPane.showInputDialog("Novo nome:");
        if (newName != null && !newName.trim().isEmpty()) {
            controleLateral.renameSelected(newName);
        }
    }

    // Alternar entre expandir e colapsar o grupo selecionado
    private void toggleCollapse() {
        controleLateral.toggleCollapse();
    }
}
